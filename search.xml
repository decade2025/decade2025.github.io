<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图解:https加密方式</title>
      <link href="2021/04/14/%E5%9B%BE%E8%A7%A3-https%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F/"/>
      <url>2021/04/14/%E5%9B%BE%E8%A7%A3-https%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h3 id="1-1、密码学要解决的三大问题"><a href="#1-1、密码学要解决的三大问题" class="headerlink" title="1.1、密码学要解决的三大问题"></a>1.1、密码学要解决的三大问题</h3><blockquote><ul><li><p>加密、防止被窃听</p></li><li><p>验证通信人的身份</p></li><li><p>内容没有被篡改</p></li></ul></blockquote><h3 id="1-2、Http的缺点"><a href="#1-2、Http的缺点" class="headerlink" title="1.2、Http的缺点"></a>1.2、Http的缺点</h3><blockquote><p>http传输信息是不加密的，因此密码学要解决的三大问题它都存在</p></blockquote><img src="https://oss-emcsprod-public.modb.pro/image/editor/20210412-ae89a849-e9c7-4368-901b-278c73283559.png" alt="image.png" style="zoom:50%;" /><h3 id="1-3、常见加密方式"><a href="#1-3、常见加密方式" class="headerlink" title="1.3、常见加密方式"></a>1.3、常见加密方式</h3><blockquote><p>在学习HTTPS加密方式之前，有必要了解几种常见的加密方式，如：</p><ul><li>对称加密</li><li>非对称加密</li></ul></blockquote><h2 id="二、常见加密方式"><a href="#二、常见加密方式" class="headerlink" title="二、常见加密方式"></a>二、常见加密方式</h2><h3 id="2-1、对称加密"><a href="#2-1、对称加密" class="headerlink" title="2.1、对称加密"></a>2.1、对称加密</h3><h4 id="2-1-1、对称加密精要"><a href="#2-1-1、对称加密精要" class="headerlink" title="2.1.1、对称加密精要"></a>2.1.1、对称加密精要</h4><blockquote><p>通信双方使用<code>同一个秘钥</code>，进行加密解密数据</p></blockquote><h4 id="2-1-2、图解具体实现"><a href="#2-1-2、图解具体实现" class="headerlink" title="2.1.2、图解具体实现"></a>2.1.2、图解具体实现</h4><img src="https://oss-emcsprod-public.modb.pro/image/editor/20210412-c22bd959-adef-4a6a-9e33-d9ff61265e01.png" alt="image.png" style="zoom:50%;" /><h4 id="2-1-3、优缺点"><a href="#2-1-3、优缺点" class="headerlink" title="2.1.3、优缺点"></a>2.1.3、优缺点</h4><blockquote><p>【优势】</p><p>计算量小、加密速度快、加密效率高</p><p>【弊端】</p><p>用户拿到秘钥即可随意获取和修改传输内容（不安全）</p></blockquote><h3 id="2-2、非对称加密"><a href="#2-2、非对称加密" class="headerlink" title="2.2、非对称加密"></a>2.2、非对称加密</h3><h4 id="2-2-1、非对称加密精要"><a href="#2-2-1、非对称加密精要" class="headerlink" title="2.2.1、非对称加密精要"></a>2.2.1、非对称加密精要</h4><blockquote><p>传输双方均有自己的<code>一对密钥</code>（也就是双方每方均有：公、私密钥各一把，双方加起来共4把），使用公钥加密的只能用私钥解密，使用私钥加密的数据只能用公钥解密。</p><p>因为<code>加密和解密</code>使用的是<code>两个不同的密钥</code>，所以这种算法叫作非对称加密算法。</p></blockquote><h4 id="2-2-2、图解具体实现"><a href="#2-2-2、图解具体实现" class="headerlink" title="2.2.2、图解具体实现"></a>2.2.2、图解具体实现</h4><img src="https://oss-emcsprod-public.modb.pro/image/editor/20210412-0e4492b2-5642-43e9-b137-4c4c8c85a272.png" alt="image.png" style="zoom:50%;" /><h4 id="2-2-3、优缺点"><a href="#2-2-3、优缺点" class="headerlink" title="2.2.3、优缺点"></a>2.2.3、优缺点</h4><blockquote><p>【优势】</p><p>比对称加密安全性高</p><p>【弊端】</p><p>传输公钥时，公钥被替换，则可以随意获取和修改传输内容</p></blockquote><h2 id="三、证书"><a href="#三、证书" class="headerlink" title="三、证书"></a>三、证书</h2><h3 id="3-1、概述"><a href="#3-1、概述" class="headerlink" title="3.1、概述"></a>3.1、概述</h3><ul><li><strong>非对称加密的核心问题</strong></li></ul><blockquote><p>非对称性加密之所以不安全，是应为客户端不知道，这把公钥是不是服务器的。因此，我们需要找到一种策略来证明这把公钥就是服务器的，而不是别人冒充的。</p></blockquote><ul><li><strong>证书</strong></li></ul><blockquote><p>证书是需要<code>申请</code>的，并由专门的<code>数字证书认证机构(CA)</code>通过非常严格的审核之后颁发的电子证书 (当然了是要钱的，安全级别越高价格越贵)。</p><p>颁发证书的同时会产生一个<code>私钥和公钥</code>。私钥由服务端自己保存，不可泄漏。公钥则是附带在证书的信息中，可以公开的。证书本身也附带一个证书电子<code>签名</code>，这个签名用来验证证书的完整性和真实性，可以<code>防止证书被篡改</code>。</p></blockquote><h3 id="3-2、查看网站证书"><a href="#3-2、查看网站证书" class="headerlink" title="3.2、查看网站证书"></a>3.2、查看网站证书</h3><blockquote><p>Chrome 浏览器点击<code>地址栏</code>的<code>锁标志</code>再点击<code>证书</code>可以看到证书详细信息</p></blockquote><img src="https://oss-emcsprod-public.modb.pro/image/editor/20210412-2f18d206-a941-497b-8fcc-c009d1a53a3d.png" alt="image.png" style="zoom:50%;" /><h3 id="3-3、证书验证失败-证书过期"><a href="#3-3、证书验证失败-证书过期" class="headerlink" title="3.3、证书验证失败/证书过期"></a>3.3、证书验证失败/证书过期</h3><img src="https://oss-emcsprod-public.modb.pro/image/editor/20210412-f9a5dc91-6bf8-4ee4-9751-1cc79a106f09.png" alt="image.png" style="zoom:40%;" /><h2 id="四、Https加密方式"><a href="#四、Https加密方式" class="headerlink" title="四、Https加密方式"></a>四、Https加密方式</h2><h3 id="4-1、Https加密精要"><a href="#4-1、Https加密精要" class="headerlink" title="4.1、Https加密精要"></a>4.1、Https加密精要</h3><blockquote><p>采用<code>非对称加密</code>方式发送对称加密的秘钥，采用<code>证书</code>判定公钥是不是服务器的，采用<code>对称加密</code>的方式传输数据。</p></blockquote><h3 id="4-2、图解具体实现"><a href="#4-2、图解具体实现" class="headerlink" title="4.2、图解具体实现"></a>4.2、图解具体实现</h3><p><img src="https://oss-emcsprod-public.modb.pro/image/editor/20210412-3d94b8ca-9409-4d0f-bfe7-7b38b967eee2.png" alt="image.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
